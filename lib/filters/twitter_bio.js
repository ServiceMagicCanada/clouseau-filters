// Generated by CoffeeScript 1.4.0
var EventEmitter, dispatch, getBios, http;

EventEmitter = require('events').EventEmitter;

http = require('http');

dispatch = new EventEmitter();

getBios = function(urls, callback, bios, index) {
  var options, req, screename, url;
  if (bios == null) {
    bios = [];
  }
  if (index == null) {
    index = 0;
  }
  if (!urls || index >= urls.length) {
    return callback(null, bios);
  }
  url = urls[index];
  screename = url.match(/(\w+)$/);
  if (!screename) {
    return getBios(urls, callback, bios, index + 1);
  } else {
    screename = screename[0];
  }
  options = {
    host: 'api.twitter.com',
    port: 80,
    method: 'GET',
    path: "/1/users/show.json?screen_name=" + screename
  };
  req = http.request(options, function(res) {
    var body;
    if (res.statusCode === 200) {
      body = '';
      res.setEncoding('utf8');
      res.on('data', function(chunk) {
        return body += chunk;
      });
      return res.on('end', function() {
        var json;
        try {
          json = JSON.parse(body);
          return bios.push(json.description);
        } catch (E) {
          return console.log("JSON PARSER ERROR. Got response:", body);
        } finally {
          getBios(urls, callback, bios, index + 1);
        }
      });
    } else {
      return getBios(urls, callback, bios, index + 1);
    }
  });
  req.on('error', function() {
    return callback(error);
  });
  return req.end();
};

module.exports = {
  validate: function(object, meta) {
    return meta.website_twitter !== void 0;
  },
  filter: function(object, meta, callback) {
    return getBios(meta.website_twitter, function(error, bios) {
      if (error) {
        return callback(error);
      }
      return callback(null, {
        twitter_bio: bios
      });
    });
  }
};
